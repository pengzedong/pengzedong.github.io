---
interface Props {
  publication: any;
  type: 'conference' | 'journal';
}

const { publication, type } = Astro.props;
---

<div class="card p-6 mb-4 publication-item" data-tags={JSON.stringify(publication.tags || [])}>
  {publication.award && (
    <div class="inline-block bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200 px-3 py-1 rounded-full text-sm font-semibold mb-3">
      üèÜ {publication.award}
    </div>
  )}
  
  <h3 class="text-lg font-bold text-gray-900 dark:text-gray-100 mb-2">
    {publication.title}
  </h3>
  
  <p class="text-gray-700 dark:text-gray-300 mb-2">
    {publication.authors}
  </p>
  
  <p class="text-gray-600 dark:text-gray-400 italic mb-3">
    {publication.venue}
    {type === 'journal' && publication.volume && `, Vol. ${publication.volume}`}
    {type === 'journal' && publication.issue && ` (${publication.issue})`}
    {publication.pages && `, pp. ${publication.pages}`}
    {publication.year && `, ${publication.year}`}
    {publication.status && ` (${publication.status})`}
  </p>
  
  <div class="flex flex-wrap gap-2 mb-3">
    {publication.tags?.map((tag: string) => (
      <span class="px-2 py-1 bg-montana-100 dark:bg-montana-900 text-montana-700 dark:text-montana-300 rounded text-xs">
        {tag}
      </span>
    ))}
  </div>
  
  {publication.url && (
    <a 
      href={publication.url} 
      target="_blank" 
      rel="noopener noreferrer"
      class="inline-flex items-center text-montana-600 dark:text-montana-400 hover:underline"
    >
      <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
      </svg>
      DOI/Link
    </a>
  )}
</div>
